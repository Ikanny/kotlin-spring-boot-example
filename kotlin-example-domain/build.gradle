import org.jooq.util.GenerationTool
import org.jooq.util.jaxb.*

import java.nio.file.Files

buildscript {

    ext {
        FLYWAY_VERSION = '4.1.2'
        JOOQ_VERSION = '3.9.1'
        H2_VERSION = '1.4.194'
    }

    repositories {
        jcenter()
        maven { url "https://plugins.gradle.org/m2/" }
    }

    dependencies {
        classpath "gradle.plugin.com.boxfuse.client:flyway-release:$FLYWAY_VERSION"
        classpath "org.jooq:jooq-codegen:$JOOQ_VERSION"
        classpath "com.h2database:h2:$H2_VERSION"
    }
}

apply plugin: 'kotlin-spring'
apply plugin: 'org.springframework.boot'
apply plugin: 'org.flywaydb.flyway'

configurations {
    integrationTestCompile.extendsFrom testCompile
    integrationTestRuntime.extendsFrom testRuntime
}

sourceSets {
    integrationTest {
        java {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDir file("src/integrationtest/kotlin")
        }
        resources.srcDir file("src/integrationtest/resources")
    }
}

dependencies {

    compile project(":kotlin-example-commons")

    // dependencies for spring boot
    compile "org.springframework.boot:spring-boot-starter-test"
    compile "org.springframework.boot:spring-boot-starter-jooq"
    compile "org.springframework.boot:spring-boot-actuator"
    compile "org.springframework.boot:spring-boot-devtools"

    // dependencies for db
    compile "mysql:mysql-connector-java:6.0.6"
    compile "com.zaxxer:HikariCP:2.7.0"

    // dependencies for flyway
    compile "org.flywaydb:flyway-core:$FLYWAY_VERSION"

    // dependencies for jooq
    compile "org.jooq:jooq:$JOOQ_VERSION"
    compile "org.jooq:jooq-meta:$JOOQ_VERSION"
    compile "org.jooq:jooq-codegen:$JOOQ_VERSION"

    // dependencies for jackson
    compile "com.fasterxml.jackson.datatype:jackson-datatype-joda:2.9.1"

    // dependencies for IT test
    integrationTestCompile "com.h2database:h2:$H2_VERSION"
    integrationTestCompile "org.dbunit:dbunit:2.5.4"
    integrationTestCompile "com.github.springtestdbunit:spring-test-dbunit:1.3.0"
}

flyway {
    url = 'jdbc:h2:./db/example_schema;MODE=MySQL'
    user = 'sa'
    password = ''
}

task jooqGenerate {
    doLast {
        Configuration configuration = new Configuration()
                .withJdbc(new Jdbc()
                .withDriver("org.h2.Driver")
                .withUrl('jdbc:h2:./db/example_schema;MODE=MySQL')
                .withUser("sa")
                .withPassword("")
        )
                .withGenerator(new Generator()
                .withGenerate(new Generate().withPojos(true))
                .withDatabase(new Database()
                .withInputSchema("public")
                .withOutputSchemaToDefault(true)
        )
                .withTarget(new Target()
                .withPackageName("com.realtonerlab.example.domain.generated")
                .withDirectory("kotlin-example-domain/src/main/java")
        )
        )
        GenerationTool.generate(configuration)

        // remove h2 db files
        new File("./db/example_schema.mv.db").delete()
        new File("./db").delete()
    }
}
jooqGenerate.dependsOn flywayMigrate